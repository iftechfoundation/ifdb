<?php

include_once "session-start.php";
include_once "dbconnect.php";
include_once "util.php";
include "pagetpl.php";
include_once "login-persist.php";
include "plugin-detect.php";
include "newitems.php";
include_once "commentutil.php";

$db = dbConnect();

$uid = checkPersistentLogin();
$quid = mysql_real_escape_string($uid, $db);

$loggedIn = (isset($_SESSION['logged_in']) && $_SESSION['logged_in']);


$adminPriv = false;
$caughtUpDate = false;
if ($uid) {
    $result = mysql_query(
        "select `privileges`, caughtupdate from users where id='$quid'", $db);
    $priv = mysql_result($result, 0, "privileges");
    $adminPriv = (strpos($priv, "A") !== false);
    $caughtUpDate = mysql_result($result, 0, "caughtupdate");
}

$debugflag = $adminPriv && get_req_data('debug') == 'yesDebug';
if ($debugflag) echo "debug mode enabled...<br>";

pageHeader("The Interactive Fiction Database - IF and Text Adventures");

?>

<div style="width:100%;">
<table style="width:100%;" cellpadding=0 cellspacing=0 border=0>
   <tr>


      <?php
// -------------------------- left column ---------------------------------
// (currently empty)
      ?>
      <td valign=top>


      </td>
      <?php
// ------------------------- center column --------------------------------
      ?>
      <td valign=top>

         <div class="headline headline1">
            Welcome to IFDB!
            <span class=headlineRss>
               <a href="news">Site News</a> |
               <a href="news?rss">
                  <img src="blank.gif" class="rss-icon">RSS Feed</a>
            </span>
         </div>

         <p>The Interactive Fiction Database is an IF game catalog and
         recommendation engine.  IFDB is a Wiki-style
         community project: members can add new game listings, write
         reviews, exchange game recommendations, and more.

         <?php
// -------------------------- inbox ----------------------------

// check the inbox
if ($quid) {
    list($inbox, $inboxCnt) =
        queryComments($db, "inbox", $quid, "limit 0, 1", $caughtUpDate, false);
    if (!$newCaughtUp || $srow[4] > $newCaughtUp)
        $newCaughtUp = $srow[4];

    if ($inboxCnt) {

        echo "<div class=headline style=\"clear:right;\">"
            . "<span class=headlineRss>"
            . "<a href=\"commentlog?user=$quid&mode=inbox&rss\">"
            . "<img src=\"blank.gif\" class=\"rss-icon\">Your Inbox (RSS)</a>"
            . "</span>"
            . "Your Discussions</div>";

        $new = $since = "";
        if ($caughtUpDate) {
            $new = " new";
            $since = "since ". date("F j, Y", strtotime($caughtUpDate));
        }
        
        list($crow) = $inbox[0];
        $cid = $crow[0];
        $cdate = $crow[5];
        $newCaughtUp = $crow[4];
        echo "You have $inboxCnt $new item" . ($inboxCnt == 1 ? "" : "s")
            . " $since in your <a href=\"commentlog?mode=inbox\">"
            . "comment inbox</a>"
            . ($caughtUpDate ? "" : " (latest on $cdate)")
            . ".<br>";
    }
}

         ?>

         <div class=headline>
            New on IFDB
            <span class=headlineRss>
               <a href="allnew-rss">
                  <img src="blank.gif" class="rss-icon">RSS Feed</a>
            </span>
         </div>

            <?php
//         <div class=indented>

if (!$db) {
    echo "<span class=errmsg>An error occurred connecting to the
        database. Please try again later, or <a href=\"contact\">contact
        us</a> if the problem persists.</span>";
}
else {
    $limit = 5;
    
    // get the latest games, reviews, and lists, and show a mix
    if (showNewItems($db, 0, 5, false, false, false))
        echo "<p><span class=details><a href=\"allnew\">"
            . "See the full list...</a></span></p>";
}

//         </div>
            ?>


      <?php
// ----------------------- bottom extra stuff table ----------------------
      ?>

      </div>
      <div class=twocol>


<?php
//  ----------------------  poll sampler box - query -----------------------

// set up the base query for polls
$baseQuery = "select
                p.pollid, p.title, p.`desc`, p.created, p.userid,
                count(v.gameid) as votecnt,
                count(distinct v.gameid) as gamecnt,
                max(v.votedate) as lastvotedate,
                u.name
              from
                polls as p
                left outer join pollvotes as v on v.pollid = p.pollid
                join users as u on u.id = p.userid
              group by
                p.pollid";
$limit = "limit 0, 5";

$rows1 = array();
$rows2 = array();
$rows3 = array();

// query the most recently created polls
$result = mysql_query(
    "$baseQuery order by p.created desc $limit", $db);
for ($i = 0, $cnt = mysql_num_rows($result) ; $i < $cnt ; $i++)
    $rows1[] = mysql_fetch_row($result);

// add the most recently active polls (i.e., latest vote)
$result = mysql_query(
    "$baseQuery order by lastvotedate desc $limit", $db);
for ($i = 0, $cnt = mysql_num_rows($result) ; $i < $cnt ; $i++)
    $rows2[] = mysql_fetch_row($result);

// add the most popular polls (most votes)
$result = mysql_query(
    "$baseQuery order by votecnt desc, gamecnt desc $limit", $db);
for ($i = 0, $cnt = mysql_num_rows($result) ; $i < $cnt ; $i++)
    $rows3[] = mysql_fetch_row($result);

// pick the top 2 of each, skipping duplicates
function addPollRows(&$dst, $src, $allRows)
{
    // add the next element of src not in dst
    addUniquePollRow($dst, $src);

    // if that failed, fall back to the master list
    addUniquePollRow($dst, $allRows);
}
function addUniquePollRow(&$dst, $src)
{
    // search for an element of src not in dst
    for ($i = 0 ; $i < count($src) ; $i++) {
        $srcEle = $src[$i];
        $srcID = $srcEle[0];
        for ($found = false, $j = 0 ; $j < count($dst) ; $j++) {
            $dstEle = $dst[$j];
            $dstID = $dstEle[0];
            if ($dstID == $srcID) {
                $found = true;
                break;
            }
        }
        if (!$found) {
            $dst[] = $srcEle;
            return;
        }
    }
}
$allRows = array_merge($rows1, $rows2, $rows3);
$rows = array();
addPollRows($rows, $rows1, $allRows);
addPollRows($rows, $rows1, $allRows);
addPollRows($rows, $rows2, $allRows);
addPollRows($rows, $rows2, $allRows);
addPollRows($rows, $rows3, $allRows);
$pollRows = $rows;
// -------------------------- done with poll query --------------------------

//
//  Figure which columns we're showing in the extra stuff table
//
$colcnt = 0;

// count polls
if (count($pollRows) > 0)
    $colcnt++;

// count the "new to IF?" box
$colcnt++;

// figure the split
$colWidth = floor(100/$colcnt) . "%";
$colClass = "firstcol";

// 
// if we found any polls, show the poll box
// 
$rows = $pollRows;
if (count($rows) > 0) {
    echo "<div width=\"$colWidth\">"
        . "<table class=\"halfcol\" cellpadding=0 cellspacing=0>"
        . "<tr><td class='$colClass'><div class=\"headline\">Vote!</div>"
        . "<div style=\"margin-bottom: 1ex;\">"
        . "Help other IFDB members find the games they're looking for "
        . "by voting in their polls.  Here are a few recent ones:"
        . "</div>";

    $colClass = "";
    
    for ($i = 0 ; $i < count($rows) ; $i++) {
        // retrieve the values
        list($pollID, $pollTitle, $pollDesc, $pollDate, $pollUserID,
             $pollVotes, $pollGames, $pollLastVoteDate, $pollUserName) =
                 $rows[$i];

        // format for HTML
        $pollTitle = htmlspecialcharx($pollTitle);
        $pollUserName = htmlspecialcharx($pollUserName);

        // display it
        echo "<div style=\"margin-left: 1em; text-indent: -1em;\">"
            . "<a href=\"poll?id=$pollID\"><b>$pollTitle</b></a>, "
            . "by <a href=\"showuser?id=$pollUserID\">$pollUserName</a>"
            . "</div>";
    }

    echo "<div class=\"details\" style=\"margin-top: 1ex;\">"
        . "<a href=\"search?browse&poll&sortby=new\">Browse all polls</a> | "
        . helpWinLink("help-polls", "What are polls?")
        . "</div></td></tr></table>";
}

//  ------------------------ end poll sampler box ---------------------------
?>
            </div>


            <?php
// ------------------------ New To IF? box ------------------------------
            ?>


            <div width="<?php echo $colWidth ?>">
               <table class="halfcol" cellpadding=0 cellspacing=0>
                  <tr>
                     <td class="<?php echo $colClass; $colClass=""; ?>">
                        <div class="headline">
                           New to IF?
                        </div>
                        The IFDB <b>Download Adviser</b> can help get you up and
                        running with the games you find on IFDB.  Just click
                        <img src="dlhelpbtn.gif" align="absmiddle"
                             alt='The "Show me how!" button'>
                        in any game's Download box for customized, step-by-step
                        instructions for running the game on your system.

                        <div id="PlayNowBox"
                          style="display: none; margin-top: 1em;">
                           Better yet, turn IFDB into your IF Jukebox!
                           Install the <img src="autoins.gif" align="absmiddle"
                              alt='The "Play Now!" button'>
                           button, which launches games directly from IFDB with
                           just one click.
                           <a href="plugins/index">Learn more...</a>
                        </div>

         <?php

// Check to see if this browser is compatible with the Meta Installer.
// If so, generate code to determine if the plug-in is already installed.
// If it's not, generate an ad for it.
        switch (detectPlugin()) {
        case "WindowsIE":
        case "WindowsMozilla":
            // we're compatible - generate scripting code to check to
            // see if the plug-in is actually installed, and if not
            // make the ad box visible
        ?>
<script type="text/javascript">
<!--
if (!detectMetaInstaller())
    document.getElementById("PlayNowBox").style.display = "";
//-->
</script>
        <?php
            break;
        }
        ?>

                     </td>
                  </tr>
               </table>
            </div>

            <?php
// ----------------------- End New To IF? Box ---------------------------
            ?>
         
      </div>
      <?php
// ------------------------- end bottom row extra stuff table ----------------
      ?>

         <?php
// ----------------------------- IFDB Recommends ----------------------

$recs = array();
$maxpicks = 12;
if ($loggedIn) {

    // We're logged in, so we can try to come up with some collaborative
    // filtering selections.  First, look to see if we already have some
    // selections cached in this session.  If we don't, try to generate
    // some new selections.

    if ($debugflag) unset($_SESSION['ifdb_recommendations']);
    
    if (isset($_SESSION['ifdb_recommendations'])) {

        // we have pre-cached recommendations
        $recs = $_SESSION['ifdb_recommendations'];
        $recsrc = $_SESSION['ifdb_recommendations_source'];

    } else {

        // No recommendations are cached, so come up with some new ones
        // First, generate a list giving the "rating distance" from each
        // other user.  The rating distance between me and user U is the
        // average of the squares of the differences of ratings we gave
        // to games that we both rated.  We also need to know the number
        // of ratings that we have in common, because that's another
        // factor in determining how much overlap there is - the more
        // ratings we have in common, and the closer those ratings, the
        // more similarity there is between our preferences.
        //
        // It's possible that even the closest users by these metrics 
        // will have little in common with us.  To avoid reporting bad
        // results from these closest-but-not-actually-close matches,
        // throw out anyone who doesn't have at least a few common
        // reviews and who isn't within a reasonable average distance.
        // (An average distance of 2.5 or greater is essentially equal
        // to random chance, so we definitely want to stay within that.
        // However, it's better to be a little stricter still, so we
        // go with 1.5 as the limit.)
        $result = mysql_query(
            "create temporary table rating_space as
             select
               r2.userid as userid,
               sum(power(cast(r1.rating as signed) - cast(r2.rating as signed), 2))
                 / count(r2.gameid) as dist,
               count(r2.gameid) as cnt
             from
               reviews as r1, reviews as r2
             where
               r1.userid = '$quid'
               and r2.userid != '$quid'
               and r2.gameid = r1.gameid
               and ifnull(now() >= r2.embargodate, 1)
             group by
               r2.userid
             having
               cnt >= 1 && dist <= 1.5", $db);

        if ($debugflag) {
            echo "<b>rating_space:</b><div class=indented>";
            $result = mysql_query("select userid, dist, cnt from rating_space", $db);
            for ($ii = 0 ; $ii < mysql_num_rows($result) ; $ii++) {
                list($du, $dd, $dc) = mysql_fetch_row($result);
                echo "userid=$du, dist=$dd, cnt=$dc<br>";
            }
            echo "</div>";
        }

        // Now we have a two-dimensional space to search: average distance
        // vs number of reviews in common.  The ideal match is the one that
        // maximizes number in common and minimizes average distance.
        //
        // There might not be anyone at this ideal point .  We might have one
        // user with 100 games in common and opposite ratings on every one,
        // and another user with only 1 game in common but an exact match on
        // rating: in this case, the ideal point of (100 games, 0 distance)
        // wouldn't have a user occupying it.  However, we can use this
        // point as a reference, and find the users with the smallest
        // distance in our 2-space from this point: this will give us the
        // best overall combination of number in common and rating distance.
        $result = mysql_query(
            "select max(cnt), min(dist) from rating_space", $db);
        list($maxcnt, $mindist) = mysql_fetch_row($result);

        // we can only proceed if we have any users in the rating space
        if ($maxcnt != "") {

            // create the proximity table
            $result = mysql_query(
                "create temporary table user_proximity as
                 select
                   userid, 
                   (cnt - $maxcnt)*(cnt - $maxcnt)
                   + (dist - $mindist)*(dist - $mindist) as dist
                 from
                   rating_space", $db);

            if ($debugflag) {
                echo "<b>user_proximity</b><div class=indented>";
                $result = mysql_query("select userid, dist from user_proximity", $db);
                for ($ii = 0 ; $ii < mysql_num_rows($result) ; $ii++) {
                    list($du, $dd) = mysql_fetch_row($result);
                    echo "userid=$du, dist=$dd<br>";
                }
                echo "</div>";
            }

            // randomly pick method 1 or method 2 initially
            $method = (rand(0, 100) > 50 ? 1 : 2);

            // we don't have anything in our list yet
            $recs = array();

            // if we chose method 1, apply it
            if ($method == 1) {
                if ($debugflag) echo "method 1<br>";

                // Method 1: Pick games according to a CONSENSUS of like-minded
                // users.  Calculate the weighted average rating for each game 
                // rated by like-minded users, weighting by "closeness," which
                // we define as (max_distance - distance).
                //
                // Calculate the maximum distance, which we need to determine
                // each user's closeness.
                $result = mysql_query(
                    "select max(dist) from user_proximity", $db);
                list($maxdist) = mysql_fetch_row($result);

                // Now calculate the weighted average rating for each game
                // that we haven't rated ourselves.  The weighting factor
                // for a user U is closeness[U]/sum(closeness), where the
                // sum includes the other users who rated that game (i.e.,
                // we want to normalize it by closeness).  If everyone's
                // at closeness zero, we have a special case where we simply
                // take an unweighted average, since everyone has the same
                // weight.  (We have to treat this as a special case to
                // avoid dividing by zero, since the normalization denominator
                // is the sum of the closenesses.)
                $result = mysql_query(
                    "select
                       games.id as gameid,
                       games.title as title,
                       games.author as author,
                       games.`desc` as `desc`,
                       (games.coverart is not null) as hasart,
                       if (sum($maxdist - user_proximity.dist) = 0,
                           avg(reviews.rating),
                           sum(reviews.rating
                               *($maxdist - user_proximity.dist))
                            / sum($maxdist - user_proximity.dist))
                         as avgrating
                     from
                       games
                       join reviews
                       join user_proximity
                       left outer join reviews as r2
                         on games.id = r2.gameid and r2.userid = '$quid'
                       left outer join playedgames as pg
                         on games.id = pg.gameid and pg.userid = '$quid'
                       left outer join wishlists as wl
                         on games.id = wl.gameid and wl.userid = '$quid'
                       left outer join unwishlists as uw
                         on games.id = uw.gameid and uw.userid = '$quid'
                     where
                       games.id = reviews.gameid
                       and user_proximity.userid = reviews.userid
                       and r2.userid is null
                       and pg.userid is null
                       and wl.userid is null
                       and uw.userid is null
                       and not (reviews.RFlags & " . RFLAG_OMIT_AVG . ")
                       and ifnull(now() >= reviews.embargodate, 1)
                       and not (games.flags & " . FLAG_SHOULD_HIDE . ")
                     group by
                       games.id
                     having
                       count(reviews.rating) >= 5
                     order by
                       avgrating desc
                     limit
                       0, $maxpicks", $db);

                if ($debugflag) echo "error = " . mysql_error($db) . "<br>";

                // fetch the results
                for ($i = 0 ; $i < mysql_num_rows($result) ; $i++)
                    $recs[] = mysql_fetch_array($result, MYSQL_ASSOC);

                // remember the source as collaborative filter #1
                $recsrc = "collab1";

                if ($debugflag) echo "record count=" . count($recs) . "<br>";
            }

            // Method 1 doesn't always produce any results, since there
            // might not be a consensus among nearby users about any
            // games.  We might do better with Method 2 in this case.
            if (count($recs) < 3)
                $method = 2;

            // apply method 2 if applicable
            if ($method == 2) {
                if ($debugflag) echo "method 2<br>";
                
                // Method 2: Pick games that anyone in our proximity list
                // rated highly (4-5 stars).  This method looks for INDIVIDUAL
                // RECOMMENDATIONS from like-minded users, but doesn't take
                // into account disagreements among these users, since only
                // one user has to have given a game a high rating.
                //
                // Find games that (a) other nearby users rated highly (4 or 5
                // starts), and (b) we HAVEN'T rated.  Group by game so that
                // we only keep unique game entries (as it's likely that the
                // same games will be recommended by multiple like-minded users,
                // at least if the theory behind this mechanism works at all
                // in practice!).  Order by distance, so that the top of the
                // the list consists of the recommendations from the most
                // similar users, and only get the top set of games.
                $result = mysql_query(
                    "select
                       games.id as gameid,
                       games.title as title,
                       games.author as author,
                       games.`desc` as `desc`,
                       (games.coverart is not null) as hasart,
                       min(user_proximity.dist) as dist
                     from
                       user_proximity
                       join reviews as r1
                       join games
                       left outer join reviews as r2
                         on games.id = r2.gameid and r2.userid = '$quid'
                       left outer join playedgames as pg
                         on games.id = pg.gameid and pg.userid = '$quid'
                       left outer join wishlists as wl
                         on games.id = wl.gameid and wl.userid = '$quid'
                       left outer join unwishlists as uw
                         on games.id = uw.gameid and uw.userid = '$quid'
                     where
                       r1.userid = user_proximity.userid
                       and games.id = r1.gameid
                       and r2.userid is null
                       and pg.userid is null
                       and wl.userid is null
                       and uw.userid is null
                       and r1.rating >= 4
                       and ifnull(now() >= r1.embargodate, 1)
                       and not (games.flags & " . FLAG_SHOULD_HIDE . ")
                     group by
                       r1.gameid
                     order by
                       dist
                     limit
                       0, $maxpicks", $db);

                if ($debugflag) echo "error = " . mysql_error($db) . "<br>";

                // fetch the results
                for ($i = 0 ; $i < mysql_num_rows($result) ; $i++)
                    $recs[] = mysql_fetch_array($result, MYSQL_ASSOC);

                // the source of these recommendations is the collab filter #2
                $recsrc = "collab2";

                if ($debugflag) echo "record count=" . count($recs) . "<br>";
            }
        }
    }
}

// if our recommendation list is empty, pick some random 4- and 5-star
// games as recommendations
if (count($recs) == 0) {

    if ($debugflag) echo "falling back on default method<br>";

    // if we're logged in, don't pick games we've already rated
    $exclJoin = "";
    $exclWhere = "";
    if ($loggedIn) {
        $exclJoin = "left outer join reviews as r2"
                    . " on games.id = r2.gameid and r2.userid = '$quid' "
                    . "left outer join playedgames as pg"
                    . " on games.id = pg.gameid and pg.userid = '$quid' "
                    . "left outer join wishlists as wl"
                    . " on games.id = wl.gameid and wl.userid = '$quid' "
                    . "left outer join unwishlists as uw"
                    . " on games.id = uw.gameid and uw.userid = '$quid' ";
        $exclWhere = "and r2.userid is null "
                     . " and pg.userid is null"
                     . " and wl.userid is null"
                     . " and uw.userid is null";
    }

    // pick the top-rated games
    $result = mysql_query(
        "select
           games.id as gameid,
           games.title as title,
           games.author as author,
           games.`desc` as `desc`,
           (games.coverart is not null) as hasart,
           avg(reviews.rating) as avgrating
         from
           games
           join reviews
           $exclJoin
         where
           games.id = reviews.gameid
           and ifnull(now() >= reviews.embargodate, 1)
           and not (reviews.RFlags & " . RFLAG_OMIT_AVG . ")
           and not (games.flags & " . FLAG_SHOULD_HIDE . ")
           $exclWhere
         group by
           games.id
         having
           avgrating >= 4
         order by
           avgrating desc
         limit
           0, $maxpicks", $db);

    // fetch the results
    for ($recs = array(), $i = 0 ; $i < mysql_num_rows($result) ; $i++)
        $recs[] = mysql_fetch_array($result, MYSQL_ASSOC);

    // the source is just generic top-rated games
    $recsrc = 'generic';
}

function sortBySortorder($a, $b)
{
    return $a['sortorder'] - $b['sortorder'];
}

// show some recommendations
if (count($recs) >= 2) {

    // randomly re-sort the list
    for ($i = 0 ; $i < count($recs) ; $i++)
        $recs[$i]['sortorder'] = rand();
    usort($recs, "sortBySortorder");

    // stash the recommendations back in the session
    $_SESSION['ifdb_recommendations'] = $recs;
    $_SESSION['ifdb_recommendations_source'] = $recsrc;

    // start the section
    echo "<div class=headline>IFDB Recommends...</div><div>";

    // show the first three entries
    for ($i = 0 ; $i < count($recs) && $i < 3 ; $i++) {

        // get the fields from the game record
        $r = $recs[$i];
        $gameid = $r['gameid'];
        $title = htmlspecialcharx($r['title']);
        $author = htmlspecialcharx($r['author']);
        $hasart = $r['hasart'];
        list($summary, $len, $trunc) = summarizeHtml($r['desc'], 140);
        $summary = fixDesc($summary);

        // display it
        echo "<p>";
        if ($hasart)
            echo "<table border=0 cellspacing=0 cellpadding=0>"
                . "<tr valign=top><td>"
                . "<a href=\"viewgame?id=$gameid\">"
                . "<img src=\"viewgame?id=$gameid&coverart&thumbnail=70x70\" "
                . "border=0 style=\"margin-right: 1em;\">"
                . "</a></td><td>";
        
        echo "<a href=\"viewgame?id=$gameid\"><i><b>$title</b></i></a>, "
            . "by $author<br>"
            . "<div class=indented><span class=details>"
            . "<i>$summary</i></span></div>";
        
        if ($hasart)
            echo "</td></tr></table>";
    }

    // explain the source
    echo "<p><span class=details><i>";
    $href = helpWinHRef("help-crossrec");
//    $href = "href=\"needjs\" "
//            . "onclick=\"javascript:helpWin('help-crossrec');return false;\"";
    if ($recsrc == 'generic') {
        echo "These are a few randomly-selected games with high
             average member ratings.  If you ";
        if (!$loggedIn)
            echo "<a href=\"login\">log in</a> and ";
        echo "rate a few games yourself, IFDB can offer customized
              recommendations (<a $href>explain</a>).";
    } else {
        echo "<a $href>Why did IFDB recommend these?</a>";
    }
    echo "</i></span>";
}
// ---------------------------- end IFDB Recommends ------------------------
         ?>

      </td>

      <?php
// -------------------------- right column ------------------------------
      ?>
      <td align=right valign=top>



         <?php
            // ----------------- control panel ---------------------
         ?>
         <table class="rightbar cpanel" cellpadding="0" cellspacing="0"
                   id="HomeControlPanel">
            <tr>
               <td>

<script type="text/javascript">
<!--
function cpanelMouseOver(e, div)
{
    div.className += " cpanelBtnHover";
}
function cpanelMouseOut(e, div)
{
    div.className = div.className.replace(/ [a-zA-Z]+$/, "");
}
//-->
</script>

<?php
function cpbtn($icon, $label, $href, $top)
{
    echo "<div class=\"cpanelBtn" . ($top ? " cpanelBtnTop" : "")
        . "\" onmouseover=\"javascript:cpanelMouseOver(event, this);\" "
        . "onmouseout=\"javascript:cpanelMouseOut(event, this);\" "
        . "onclick=\"javascript:window.navigate('$href');return false;\">"
        . "<a href=\"$href\">"
        . "<img src=\"/blank.gif\" class=\"$icon cpanelBtnIcon\"></a> "
        . "<a href=\"$href\">$label</a>"
        . "</div>";
}
?>
                  <div class="cpanelHeading cpanelHeadingTop">Find</div>
                  <?php cpbtn("game-search-icon", "Advanced Game Search",
                              "search", true) ?>
                  <?php cpbtn("list-search-icon", "Find a Recommended List",
                              "search?list", false) ?>
                  <?php cpbtn("poll-search-icon", "Find a Poll",
                              "search?poll", false) ?>
                  <?php cpbtn("new-poll-icon", "Create a Poll",
                              "poll?id=new", false) ?>
                  <?php cpbtn("competition-search-icon","Find a Competition",
                              "search?comp", false) ?>
                  <?php cpbtn("club-search-icon","Find a Club",
                              "search?club", false) ?>
                  <?php cpbtn("member-search-icon", "Look Up a Member",
                              "search?member", false) ?>

                  <div class="cpanelHeading">Browse</div>
                  <?php cpbtn("random-list-icon", "10 Random Games",
                              "random", true) ?>
                  <?php cpbtn("browse-games-icon", "Browse Games",
                              "search?browse", false) ?>
                  <?php cpbtn("browse-lists-icon", "Browse Lists",
                              "search?browse&list&sortby=new", false) ?>
                  <?php cpbtn("browse-polls-icon", "Browse Polls",
                              "search?browse&poll&sortby=new", false) ?>
                  <?php cpbtn("browse-competitions-icon", "Browse Competitions",
                              "search?browse&comp&sortby=awn", false) ?>
                  <?php cpbtn("browse-clubs-icon", "Browse Clubs",
                              "search?browse&club&sortby=new", false) ?>
                  <?php cpbtn("browse-members-icon", "Browse Members",
                              "search?browse&member&sortby=new", false) ?>

                  <div class="cpanelHeading">Contribute</div>
                  <?php cpbtn("create-review-icon", "Review a Game",
                              "review?browse", true) ?>
                  <?php cpbtn("create-list-icon", "Create a Recommended List",
                              "editlist?id=new", false) ?>
                  <?php cpbtn("create-game-icon", "Add a Game Listing",
                              "editgame?id=new", false) ?>
                  <?php cpbtn("edit-game-icon", "Edit a Game Listing",
                              "editgame?search", false) ?>
                  <?php cpbtn("create-competition-icon", "Add a Competition Page",
                              "editcomp?id=new", false) ?>
                  <?php cpbtn("create-club-icon", "Add a Club Listing",
                              "editclub?id=new", false) ?>

                  <div class="cpanelHeading">Personalize</div>
                  <?php cpbtn("my-profile-icon", "Edit Your Profile",
                              "editprofile", true) ?>
                  <?php cpbtn("style-gallery-icon", "Pick a Custom Display Style",
                              "styles", true) ?>

                  <?php
                  if ($adminPriv) {
                      echo "<div class='cpanelHeading'>Administration</div>";
                      cpbtn("empty-button-icon", "System Maintenance Panel",
                            "adminops", true);
                  }
                  ?>

               </td>
            </tr>
         </table>


<?php
   // ------------------------ top reviewers insert --------------------
    ?>


         <table class=rightbar cellpadding=0 cellspacing=0>
            <tr class="boxhead">
               <td><h3>Reviewer Trophy Room</h3></td>
            </tr>
            <tr>
               <td>
                  <span class=details><i>IFDB's top reviewers, as determined
                     by <?php echo helpWinLink("help-ff", "Frequent Fiction")
                     ?> scores:</i></span><p>
                  <?php

$rlst = getTopReviewers($db, 4);
$n = 1;
foreach ($rlst as $r) {
    list($ruid, $runame, $rscore) = $r;
    $runame = htmlspecialcharx($runame);
    echo "<span style='padding: 0 1.5ex 0 1ex;' class=details><i>#$n</i></span>"
        . "<a class=silent href=\"showuser?id=$ruid\">$runame</a>"
        . "<br>";
    $n++;
}

                  ?>

                  <p><span class=details>
                     <a href="search?sortby=ffrank&browse=1&member=1">
                     See all</a> |
                  <?php echo helpWinLink(
                      "help-top-rev", "Who qualifies?") ?>
                  </span>
    
               </td>
            </tr>
         </table>

<?php
// -------------------- end reviewers insert ------------------------------
?>


         <?php
//  ----------------------- Join IFDB ad --------------------------------

if (!$loggedIn) {
         ?>
         <p>
         <table class=rightbar cellpadding=0 cellspacing=0>
            <tr class="boxhead">
               <td align=center><h3>Join IFDB!</h3></td>
            </tr>
            <tr>
               <td>
                  IFDB isn't just for reading about IF - you can also
                  share your opinions about your favorite games.
                  Members can write reviews, create Recommended Lists,
                  add and edit game listings, and more. Membership
                  is free and only takes a few moments to set up.
                  <a href="newuser">Sign up now!</a>
               </td>
            </tr>
         </table>
         <?php
}
//  ----------------------- End Join IFDB ad -----------------------------
         ?>



<?php
   //------------------------- statistics insert --------------------
?>

        <table class="rightbar" cellpadding="0" cellspacing="0">
            <tr>
               <td>
                  <h3>In the Database</h3>
<?php
   
$result = mysql_query("select count(*) as c from games", $db);
$cnt = mysql_result($result, 0, "c");
echo "&bull; <a class=silent href=\"search?browse\">$cnt Game Listings</a><br>";

$result = mysql_query(
    "select count(*) as c from reviews
     where special is null
       and review is not null
       and ifnull(now() >= embargodate, 1)", $db);
$cnt = mysql_result($result, 0, "c");
if ($cnt)
    echo "&bull; $cnt Member Reviews<br>";

$result = mysql_query(
    "select count(*) as c from reviews
     where
       rating is not null
       and special is null
       and review is null
       and ifnull(now() >= embargodate, 1)", $db);
$cnt2 = mysql_result($result, 0, "c");
if ($cnt2)
    echo "&bull; $cnt2 Member Ratings<br>";

$result = mysql_query(
    "select count(*) as c from users
     where acctstatus = 'A' and ifnull(profilestatus, ' ') != 'R' ", $db);
$cnt = mysql_result($result, 0, "c");
if ($cnt)
    echo "&bull; <a class=silent href=\"search?browse&member&sortby=new\">"
        . "$cnt Registered Members</a><br>";

$result = mysql_query("select count(*) as c from reclists", $db);
$cnt = mysql_result($result, 0, "c");
if ($cnt)
    echo "&bull; <a class=silent href=\"search?browse&list&sortby=new\">"
        . "$cnt Recommended Lists</a><br>";

$result = mysql_query("select count(*) as c from polls", $db);
$cnt = mysql_result($result, 0, "c");
if ($cnt)
    echo "&bull; <a class=silent href=\"search?browse&poll&sortby=new\">"
        . "$cnt Polls</a><br>";
    
$result = mysql_query("select count(*) as c from competitions", $db);
$cnt = mysql_result($result, 0, "c");
if ($cnt)
    echo "&bull; <a class=silent href=\"search?browse&comp\">"
        . "$cnt Competition Listings</a><br>";
    
echo "</div>";
?>

               </td>
            </tr>
         </table>

<?php
// ---------------------- end statistics insert ----------------------
?>
            


<?php
//         <p>
//         <table class=rightbar cellpadding=0 cellspacing=0>
//            <tr class="boxhead">
//               <td><h3>Customize IFDB</h3></td>
//            </tr>
//            <tr>
//               <td>
//                  You can change the way IFDB looks by choosing a new
//                  layout from the <a href="styles?gallery">style gallery</a>,
//                  and you can even create your own custom style from
//                  scratch. <a href="styles">Learn more...</a>
//               </td>
//            </tr>
//         </table>
?>

<?php
//         <p>
//         <table class=rightbar cellpadding=0 cellspacing=0>
//            <tr class="boxhead">
//               <td><h3>What is IFDB?</h3></td>
//            </tr>
//            <tr>
//               <td>
//                  It's a game catalog and recommendation engine for
//                  Interactive Fiction.  If you're looking for a new game
//                  to play, we have the tools to help you find something
//                  you'll like.  If you're a veteran adventurer, use IFDB
//                  to promote your favorite games.
//                  <a href="tips">Tips &amp; More Info</a>
//                  - <a href="news">Site News</a>
//               </td>
//            </tr>
//         </table>
?>


<?php
   // ------------------------ OLD "IN THE DATABASE" SECTION -----------------
//
//         <p>
//         <table class=rightbar cellpadding=0 cellspacing=0>
//            <tr class="boxhead">
//               <td><h3>In the Database</h3></td>
//            </tr>
//            <tr>
//               <td>
//
//                  < ?php
//
//$result = mysql_query("select count(*) as c from games", $db);
//$cnt = mysql_result($result, 0, "c");
//echo "&bull; <a class=silent href=\"search?browse\">$cnt Game Listings</a><br>";
//
//$result = mysql_query(
//    "select count(*) as c from reviews
//     where special is null
//       and review is not null
//       and ifnull(now() >= embargodate, 1)", $db);
//$cnt = mysql_result($result, 0, "c");
//if ($cnt)
//    echo "&bull; $cnt Member Reviews<br>";
//
//$result = mysql_query(
//    "select count(*) as c from reviews
//     where
//       rating is not null
//       and special is null
//       and review is null
//       and ifnull(now() >= embargodate, 1)", $db);
//$cnt2 = mysql_result($result, 0, "c");
//if ($cnt2)
//    echo "&bull; $cnt2 Member Ratings<br>";
//
//$result = mysql_query("select count(*) as c from users", $db);
//$cnt = mysql_result($result, 0, "c");
//if ($cnt)
//    echo "&bull; <a class=silent href=\"search?browse&member&sortby=new\">"
//        . "$cnt Registered Members</a><br>";
//
//$result = mysql_query("select count(*) as c from reclists", $db);
//$cnt = mysql_result($result, 0, "c");
//if ($cnt)
//    echo "&bull; <a class=silent href=\"search?browse&list&sortby=new\">"
//        . "$cnt Recommended Lists</a><br>";
//
//
//                  ? >
//
//               </td>
//            </tr>
//         </table>

// -------------------- END OLD "IN THE DATABASE" SECTION ------------------
?>

      </td>
   </tr>
</table>


<?php

// ----------------------- OBSOLETE BOTTOM CONTROL PANEL ---------------------
if (false) {
?>


<table class=botbar>
   <tr valign=top>
      <td width="50%">
         <table width="100%" height="100%">
            <tr class=botbarhdr>
               <td>
                  Find Games &amp; Recommendations
               </td>
            </tr>
            <tr>
               <td>
                  <div class=indented>
                     <div>
                        <b><a href="search">
                           <img src="/blank.gif" class="game-search-icon"></a>
                        <a href="search">Advanced game search</a></b>
                     </div>
                     <div>
                        <b><a href="search?list">
                           <img src="/blank.gif" class="list-search-icon"></a>
                        <a href="search?list">Find a Recommended List</a></b>
                     </div>
                     <div>
                        <b><a href="poll?id=new">
                           <img src="/blank.gif" class="new-poll-icon"></a>
                        <a href="poll?id=new">Create a poll</a></b>
                     </div>
                     <div>
                        <b><a href="random">
                           <img src="/blank.gif" class="random-list-icon"></a>
                        <a href="random">10 Random Games</a></b>
                     </div>
                     <div>
                        <b><a href="search?member">
                           <img src="/blank.gif" class="member-search-icon"></a>
                        <a href="search?member">Look up a member</a></b>
                     </div>
                     <div>
                        <b><a href="search?browse">
                           <img src="/blank.gif" class="browse-games-icon"></a>
                        <a href="search?browse">Browse games</a></b>
                     </div>
                     <div>
                        <b><a href="search?browse&list">
                           <img src="/blank.gif" class="browse-lists-icon"></a>
                        <a href="search?browse&list&sortby=new">Browse Recommended Lists</a></b>
                        or
                        <b><a href="search?browse&poll&sortby=new">Polls</a></b>
                     </div>
                     <div>
                        <b><a href="search?browse&member">
                           <img src="/blank.gif" class="browse-members-icon"></a>
                        <a href="search?browse&member">Browse members</a></b>
                     </div>
                  </div>
               </td>
            </tr>
         </table>
      </td>
         
      <td width="50%">
         <table width="100%" height="100%">
            <tr class=botbarhdr>
               <td>
                  Contribute
               </td>
            </tr>
            <tr>
               <td>
                  <div class=indented>
                     <div>
                        <b><a href="personal">
                           <img src="/blank.gif" class="personal-page-icon"></a>
                        <a href="personal">Go to your personal IFDB page</a></b>
                     </div>
                     <div>
                        <b><a href="editlist?id=new">
                           <img src="/blank.gif" class="create-list-icon"></a>
                        <a href="editlist?id=new">Create a Recommended List</a></b>
                     </div>
                     <div>
                        <b><a href="editgame?id=new">
                           <img src="/blank.gif" class="create-game-icon" ></a>
                        <a href="editgame?id=new">Add a new game listing</a></b>
                     </div>
                     <div>
                        <b><a href="editcomp?id=new">
                           <img src="/blank.gif" class="create-competition-icon" ></a>
                        <a href="editcomp?id=new">Add a new competition page</a></b>
                     </div>
                     <div>
                        <img src="/blank.gif" class="edit-game-icon">
                        To <b>Update a game listing</b> - visit the game's listing
                     </div>
                     <div>
                        <img src="/blank.gif" class="create-review-icon">
                        To <b>Review a game</b> - visit the game's listing<br>
                     </div>
                  </div>
               </td>
            </tr>
         </table>
      </td>
   </tr>
</table>

<?php

if ($adminPriv)
echo "<p><a href=\"adminops\">Administrative Operations</a><p>";
}
// ------------------ END OBSOLETE BOTTOM CONTROL PANEL ---------------------

pageFooter();

?>